<Window x:Class="DontSleepWPF.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DontSleepWPF"
        mc:Ignorable="d"
        Title="Don't Sleep" Height="130" Width="210" MinHeight="130" MinWidth="210"
        ResizeMode="CanMinimize" MaxHeight="130" MaxWidth="260">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <!--<RowDefinition Height="25"/>-->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Text="Timeout:" Margin="21,0,0,0"/>
        <TextBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                     Text="{Binding Path=Timeout, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Text="seconds" Margin="5"/>

        <CheckBox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                      Content="Stop after:" Margin="1,0,0,0" IsChecked="{Binding StopTimeSwitched, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <TextBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,3"
                     Text="{Binding Path=StopTimePeriodValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                     IsEnabled="{Binding IsStopTimePeriodEnabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        <ComboBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,2"                 
                     ItemsSource="{Binding TimePeriods}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding SelectedStopTimePeriod}"
                     IsEnabled="{Binding IsStopTimePeriodEnabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        <Grid Grid.Row="2" Grid.ColumnSpan="3" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <ToggleButton Grid.Row="2" Grid.Column="1" x:Name="Chkbx" 
                          Style="{DynamicResource NiceToggleButton}" 
                          Command="{Binding CheckedCommand}"
                          CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}"/>
        </Grid>
        
        
        <!--<Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Text="Status:" Margin="21,0,0,0"/>
            <Rectangle Grid.Column="1" Margin="2"
                       Fill="{Binding Path=KeyPressorStatusColor, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" x:Name="StartBtn" Margin="5"
                    Command="{Binding Path=StartCommand}" Content="Start"/>
            <ToggleButton Grid.Column="1" x:Name="Chkbx" 
                          Style="{DynamicResource NiceToggleButton}" 
                          Command="{Binding CheckedCommand}"
                          CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}"/>
            <Button Grid.Column="2" x:Name="StopBtn" Margin="5"
                    Command="{Binding Path=StopCommand}" Content="Stop"/>
        </Grid>-->
    </Grid>
</Window>
